buildscript {
	ext {
		springBootVersion = '1.3.0.M5'
		springCloudStarterParentTrain = 'Brixton.BUILD-SNAPSHOT'
		scsVersion = '1.0.0.M1'
		junitVersion = '4.12'
		bootstrapVersion = '2.3.2'
		thymeleafExtras = '2.1.2.RELEASE'
		dependencyPlugin = '0.5.3.RELEASE'
	}

	repositories { 
		mavenCentral()
		maven { url "http://repo.spring.io/milestone" }
		maven { url "http://repo.spring.io/snapshot" }
	}


	dependencies {
		classpath "io.spring.gradle:dependency-management-plugin:${dependencyPlugin}"
		classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
	}
}


// Apply versioning to all projects from versioning script.
allprojects { apply from: "$rootDir/gradle/versioning.gradle" }

subprojects {
	apply plugin: 'java'
	apply plugin: 'eclipse'
	apply plugin: 'jacoco'
	apply plugin: 'spring-boot'
	apply plugin: "io.spring.dependency-management"
	


	jacoco { toolVersion = "0.7.1.201405082137" //	reportsDir = file("$buildDir/customJacocoReportDir")
	}
	jacocoTestReport {
		group = "Reporting"
		description = "Generate Jacoco coverage reports after running tests."
		additionalSourceDirs = files(sourceSets.main.allJava.srcDirs)
	}

	test { finalizedBy jacocoTestReport }

	sourceCompatibility = 1.8
	targetCompatibility = 1.8

	repositories {
		mavenCentral()
		maven { url "http://repo.spring.io/milestone" }
		maven { url "http://repo.spring.io/snapshot" }
	}

	dependencyManagement {
		imports {
			mavenBom "io.pivotal.spring.cloud:spring-cloud-services-starter-parent:${scsVersion}"
			mavenBom "org.springframework.boot:spring-boot-starter-parent:${springBootVersion}"
			mavenBom "org.springframework.cloud:spring-cloud-starter-parent:${springCloudStarterParentTrain}"
		}
	}
	dependencies {
		compile "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
		compile "org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}"
		compile "org.springframework.cloud:spring-cloud-starter-eureka"
		compile "org.springframework.cloud:spring-cloud-starter-hystrix"
		compile "org.springframework.cloud:spring-cloud-starter-sleuth"
		compile "io.pivotal.spring.cloud:spring-cloud-services-starter-config-client"
		compile "io.pivotal.spring.cloud:spring-cloud-services-starter-service-registry"
		compile "io.pivotal.spring.cloud:spring-cloud-services-starter-circuit-breaker"

		//test packages
		testCompile "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
		testCompile "junit:junit:$junitVersion"

	}
}

project(':springboottrades-accounts') {
	jar { baseName = 'accounts' }
	description = "Micro-service to deal with accounts and user logins"

	dependencies {
		compile "org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}"

		// test packages
		testRuntime "com.jayway.jsonpath:json-path"

		// Runtime
		runtime "org.hsqldb:hsqldb"

	}
}

project(':springboottrades-quotes') {
	jar { baseName = 'quotes' }
	description = "Micro-service to retrieve up to date quotes"
	dependencies {

		//runtime

		//test packages
		testRuntime "com.jayway.jsonpath:json-path"
	}
}

project(':springboottrades-portfolio') {
	jar { baseName = 'portfolio' }
	description = "Micro-service to manage portfolios"
	dependencies {
		compile "org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}"

		//runtime
		runtime "org.hsqldb:hsqldb"

		//test packages
		testRuntime "com.jayway.jsonpath:json-path:2.0.0"
		testRuntime "org.hsqldb:hsqldb"
	}
}

project(':springboottrades-web') {
	jar { baseName = 'web' }
	description = "Web interface to the springboot set of services"
	dependencies {
		compile "org.springframework.boot:spring-boot-starter-thymeleaf:${springBootVersion}"
		compile "org.springframework.boot:spring-boot-starter-security:${springBootVersion}"
		compile "org.thymeleaf.extras:thymeleaf-extras-springsecurity4:${thymeleafExtras}"

		//runtime
		runtime "org.webjars:bootstrap:${bootstrapVersion}"

		//test packages
	}
}

task wrapper(type: Wrapper) { gradleVersion = '2.7' }
